server:
  port: 8081
spring:
  datasource:
    url: jdbc:mysql://localhost:3306/wxx_platform?useUnicode=true&characterEncoding=utf-8&serverTimezone=Asia/Shanghai
    username: root
    password: root
    driver-class-name: com.mysql.cj.jdbc.Driver
    #对象的类型，这里是druid数据源
    type: com.alibaba.druid.pool.DruidDataSource
    #初始化连接数：默认值 0
    initialSize: 5
    #最小空闲连接数，默认值 0,当高峰期过后，连接使用的少了，但是连接池还是会为你留着minIdle的连接，以备高峰期再次来临的时候不需要创建连接当高峰期过后，连接使用的少了，但是连接池还是会为你留着minIdle的连接，以备高峰期再次来临的时候不需要创建连接
    minIdle: 5
    #最大活跃连接数，这个数字不宜设置过大，太多的并发连接对数据库的压力很大，甚至会导致雪崩，这是一定要注意的。但是如果设置过小，而应用的服务线程数有很高，可能会导致有的服务线程拿不到连接，所以服务的线程数和数据库连接数是需要经过配合调整的最大活跃连接数，这个数字不宜设置过大，太多的并发连接对数据库的压力很大，甚至会导致雪崩，这是一定要注意的。但是如果设置过小，而应用的服务线程数有很高，可能会导致有的服务线程拿不到连接，所以服务的线程数和数据库连接数是需要经过配合调整的
    maxActive: 20
    #最大等待毫秒数, 单位为 ms, 超过时间会出错误信息最大等待毫秒数, 单位为 ms, 超过时间会出错误信息
    maxWait: 60000
    #每过多少秒运行一次空闲连接回收器，这里设置的是30秒
    timeBetweenEvictionRunsMillis: 30000
    #连接池中的连接空闲多少时间后被回收，这里设置的是30分钟
    minEvictableIdleTimeMillis: 1800000
    # 验证使用的SQL语句
    validationQuery: SELECT 1 FROM DUAL
    #指明连接是否被空闲连接回收器(如果有)进行检验.如果检测失败,则连接将被从池中去除.
    testWhileIdle: true
    # 申请连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。
    testOnBorrow: false
    #归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能
    #testOnBorrow和testOnReturn在生产环境一般是不开启的，主要是性能考虑。失效连接主要通过testWhileIdle保证，如果获取到了不可用的数据库连接，一般由应用处理异常
    testOnReturn: false
    #是否缓存preparedStatement，即PSCache。PSCache对支持游标的数据库性能提升巨大
    poolPreparedStatements: true
    #最大启用PSCache的数量
    maxPoolPreparedStatementPerConnectionSize: 20
    #配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
    filters: stat,wall,log4j
    #合并多个DruidDataSource的监控数据
    useGlobalDataSourceStat: true
    #通过connectProperties属性来打开mergeSql功能；慢SQL记录
    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=500
  # redis配置
  redis:
    # Redis数据库索引（默认为0）
    database: 1
    # Redis服务器地址
    host: 127.0.0.1
    # Redis服务器连接端口
    port: 6379
    # Redis服务器连接密码（默认为空）
    # password:
    # 连接超时时间
    timeout: 10s
    lettuce:
      pool:
        # 连接池最大连接数
        max-active: 200
        # 连接池最大阻塞等待时间（使用负值表示没有限制）
        max-wait: -1ms
        # 连接池中的最大空闲连接
        max-idle: 10
        # 连接池中的最小空闲连接
        min-idle: 0
# Sa-Token配置
sa-token:
  # token名称 (同时也是cookie名称)
  token-name: Authorization
  # token有效期，单位s 默认30天, -1代表永不过期
  timeout: 604800
  # token临时有效期 (指定时间内无操作就视为token过期) 单位: 秒
  activity-timeout: -1
  # 是否允许同一账号并发登录 (为true时允许一起登录, 为false时新登录挤掉旧登录)
  is-concurrent: true
  # 在多人登录同一账号时，是否共用一个token (为true时所有登录共用一个token, 为false时每次登录新建一个token)
  is-share: true
  # token风格
  token-style: uuid
  # 是否输出操作日志
  is-log: true
  # 是否输出画
  is-print: false
  # jwt秘钥
  jwt-secret-key: U2FsdGVkX18NzqGeVpkb89hHM5H4dsa78HZrhOWkRg==

